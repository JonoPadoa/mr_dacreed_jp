PRISMA CLIENT STUFF

import { PrismaClient } from '@prisma/client'
const prisma = new PrismaClient()

*******************************THIS IS CODE FROM HEADERbODY COMPONENT***********************
 <div className="form-control w-full">
          <label className="label">
            <span className="label-text font-semibold">Title</span>
          </label>

          <textarea
            placeholder="Title here"
            className="shadow-inner-md textarea-bordered textarea textarea-xs w-full rounded-sm"
            style={{ width: "100%" }}
          ></textarea>
        </div>

        <div className="form-control w-full">
          <label className="label">
            <span className="label-text font-semibold">Sub-heading</span>
          </label>

          <textarea
            placeholder="Sub-heading here"
            className="textarea-bordered textarea textarea-xs w-full rounded-sm shadow-md"
            style={{ width: "100%" }}
          ></textarea>
        </div>

        <div className="form-control w-full">
          <label className="label">
            <span className="label-text font-semibold">Description</span>
          </label>

          <textarea
            placeholder="Description here"
            className="textarea-bordered textarea  h-48 w-full rounded-sm shadow-md"
            style={{ width: "100%" }}
          ></textarea>
        </div>
        <div></div>
        <textarea
          id="title"
          className="mt-8 block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
          placeholder="Title will be populated here:"
        ></textarea>
        <textarea
          id="sub-heading"
          className="mt-8 block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
          placeholder="Sub-heading will be populated here:"
        ></textarea>
        <textarea
          id="description"
          className="mt-8 block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
          placeholder="Description will be populated here:"
        ></textarea>


        *****************BUTTON FROM THE COMPONENT TOO.*************************************
          <button className="ml-4 rounded-lg bg-[#064e3b] p-2 text-white hover:bg-[#059669]">
          Save Changes
        </button>

        *************************MAP PART OF THE COMPONENT:*****************************************
            <div>
        <ul className="menu m-2 rounded-lg border-2 p-4">
          {courseHeaders?.map((courseHeader) => (
            <li key={courseHeader.id}>
              <a
                href="#"
                onClick={(evt) => {
                  evt.preventDefault();
                  // setSelectedInput();
                }}
              >
                {courseHeader.title}
              </a>
            </li>
          ))}
        </ul>
      </div>


      ***************************************ELENAS MODALS FOR THE INPUT PAGE**************************************************************************
      import React, { Fragment, useState } from "react";
      import Link from "next/link";
      import FooterBird from "../../componentsRoot/FooterBird";
      import Modal4 from "../../componentsRoot/Modal4";
      import { Transition } from '@headlessui/react'

      const [showModal, setShowModal] = useState(false);
      
      <button
            className="fovus:outline-none rounded-full bg-[#7ebfb3] p-4 text-white drop-shadow-md hover:bg-white/50 "
            onClick={() => setShowModal(true)}
          >
            From Existing Content (Docs)
          </button>
          <button
            className="fovus:outline-none rounded-full bg-[#7ebfb3] p-4 text-white drop-shadow-md hover:bg-white/50"
            onClick={() => setShowModal(true)}
          >
            Import SCORM xAPI Ci5
          </button>


      <Transition
        show={showModal}
        enter="transition-opacity duration-75"
        enterFrom="opacity-0"
        enterTo="opacity-100"
        leave="transition-opacity duration-150"
        leaveFrom="opacity-100"
        leaveTo="opacity-0"
      >
        <Fragment>

          <Modal4
            isVisible={showModal}
            onClose={() => setShowModal(false)}
            // children={undefined}
          >
            <div className="min-[576px]:shadow-[0_0.5rem_1rem_rgba(#000, 0.15)] pointer-events-auto relative flex w-full flex-col rounded-md border-none bg-white bg-clip-padding text-current shadow-lg outline-none dark:bg-neutral-600 ">
              <div className="flex flex-shrink-0 items-center justify-between rounded-t-md border-b-2 border-neutral-100 border-opacity-100 p-4 dark:border-opacity-50">
                {/* <!--Modal title--> */}
                <h5
                  className="text-xl font-medium leading-normal text-neutral-800 dark:text-neutral-200"
                  id="exampleModalLabel"
                >
                 Upload Doc
                </h5>
                {/* <!--Close button--> */}
                <button
                  type="button"
                  className="box-content rounded-none border-none hover:no-underline hover:opacity-75 focus:opacity-100 focus:shadow-none focus:outline-none"
                  data-te-modal-dismiss
                  aria-label="Close"
                  onClick={() => setShowModal(false)}
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    className="h-6 w-6"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      d="M6 18L18 6M6 6l12 12"
                    />
                  </svg>
                </button>
              </div>

              {/* <!--Modal body--> */}
              <div
                className="relative flex items-center justify-center p-4 first-line:flex-row "
                data-te-modal-body-ref
              >
                <div className="container mx-auto flex  flex-col items-center justify-center">
                  {/* upload files */}
                  <label
                    className="mb-2 block text-sm font-medium text-gray-900 dark:text-white"
                    htmlFor="multiple_files"
                  >
                    Upload multiple files
                  </label>
                  <input
                    className="block w-full cursor-pointer rounded-lg border border-gray-300 bg-gray-50 text-sm text-gray-900 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-gray-400 dark:placeholder-gray-400"
                    id="multiple_files"
                    type="file"
                    multiple
                  />
                 
                  {/* upload images */}
                  <div className="flex w-full items-center justify-center">
                    <label
                      htmlFor="dropzone-file"
                      className="dark:hover:bg-bray-800 flex h-64 w-full cursor-pointer flex-col items-center justify-center rounded-lg border-2 border-dashed border-gray-300 bg-gray-50 hover:bg-gray-100 dark:border-gray-600 dark:bg-gray-700 dark:hover:border-gray-500 dark:hover:bg-gray-600"
                    >
                      <div className="flex flex-col items-center justify-center pb-6 pt-5">
                        <svg
                          className="mb-4 h-8 w-8 text-gray-500 dark:text-gray-400"
                          aria-hidden="true"
                          xmlns="http://www.w3.org/2000/svg"
                          fill="none"
                          viewBox="0 0 20 16"
                        >
                          <path
                            stroke="currentColor"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2"
                          />
                        </svg>
                        <p className="mb-2 text-sm text-gray-500 dark:text-gray-400">
                          <span className="font-semibold">Click to upload</span>{" "}
                          or drag and drop
                        </p>
                        <p className="text-xs text-gray-500 dark:text-gray-400">
                          SVG, PNG, JPG or GIF (MAX. 800x400px)
                        </p>
                      </div>
                      <input
                        id="dropzone-file"
                        type="file"
                        className="hidden"
                      />
                    </label>
                  </div>
                </div>


                <div className="container mx-auto flex items-center justify-center">
                  <img src="/courseTone_1.jpg" alt="choose tone" />
                </div>
              </div>

              {/* <!--Modal footer--> */}
              <div className="flex flex-shrink-0 flex-wrap items-center justify-end rounded-b-md border-t-2 border-neutral-100 border-opacity-100 p-4 dark:border-opacity-50">
                <button
                  type="button"
                  className="bg-primary-100 text-primary-700 hover:bg-primary-accent-100 focus:bg-primary-accent-100 active:bg-primary-accent-200 inline-block rounded px-6 pb-2 pt-2.5 text-xs font-medium uppercase leading-normal transition duration-150 ease-in-out focus:outline-none focus:ring-0"
                  data-te-modal-dismiss
                  data-te-ripple-init
                  data-te-ripple-color="light"
                  onClick={() => setShowModal(false)}
                >
                  Close
                </button>
                <button
                  type="button"
                  className="hover:bg-primary-600 focus:bg-primary-600 active:bg-primary-700 ml-1 inline-block rounded bg-primary px-6 pb-2 pt-2.5 text-xs font-medium uppercase leading-normal text-white shadow-[0_4px_9px_-4px_#3b71ca] transition duration-150 ease-in-out hover:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.3),0_4px_18px_0_rgba(59,113,202,0.2)] focus:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.3),0_4px_18px_0_rgba(59,113,202,0.2)] focus:outline-none focus:ring-0 active:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.3),0_4px_18px_0_rgba(59,113,202,0.2)] dark:shadow-[0_4px_9px_-4px_rgba(59,113,202,0.5)] dark:hover:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.2),0_4px_18px_0_rgba(59,113,202,0.1)] dark:focus:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.2),0_4px_18px_0_rgba(59,113,202,0.1)] dark:active:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.2),0_4px_18px_0_rgba(59,113,202,0.1)]"
                  data-te-ripple-init
                  data-te-ripple-color="light"
                >
                  Save changes
                </button>
              </div>
            </div>
          </Modal4>
        </Fragment>
        </Transition>